1.词法分析（20分）
（1）NFA->DFA
（2）DFA最小化
看了很久，但是不知道为什么第一问子集构造法解出的DFA就已经是最小的了，所以第二问就用Hopcroft算法稍微说明了一下，没法继续划分


2.语法分析（20分）
（1）根据文法写分析表
（2）一个字符串，可不可以被这个文法接受
LL文法，比较简单，没有“空”，直接写即可。
可否被接受可以直接看出来，不可以。然后用栈去按照分析表模拟这个过程，得出不能。


3.语法制导和翻译（10分）
考虑4进制体系中数字集合为: =0,1,2请构建一个组产生式并设计语义动作，使其具备将三进制
数翻译成十进制的能力。
使用综合属性就可以构造出来。

4.寄存器分配（30分）
一个比较简单的图，先做活性分析，再分配寄存器，要求画出那个无向图

5.优化相关（20分）

T1=j-2
T2=4*T1
temp = A[T2]
T3=j+2
T4=T3-2
T5=8*T4
T6=A[T5	]
……
T11=

印象中提取了几次公共子表达式之后，就比较简洁了，
主要就用到了常量传播和公共子表达式，强度削弱好像没用到，
我试图用<<2来代替*4，但感觉其实用处不是很大。
化简到最后可以看出是一个交换数组相邻两个数的swap操作
答案大概最后是这样：
T1 = j - 1
T2 = T1 * 4
temp = A[T2]
T3 = T2 + 4
T4 = A[T3]
A[T2] = T4
A[T3] = temp

我们一般写代码对于这种交换操作是这么写的
temp = a[i-1];
a[i-1] = a[i];
a[i] = temp;
但是对于数组的访存不能一步进行，这里需要两步，所以上面那样应该；已经从原理上达到了最简。